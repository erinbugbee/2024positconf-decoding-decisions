---
title: "To Explore or To Exploit"
subtitle: "Decoding Human Decision Making with `R` and `Python`"
footer: "posit::conf(2024)"
author: Erin Bugbee
format: 
  revealjs:
    theme: [default, custom-theme.scss]
    incremental: true
    slideNumber: true
editor: visual
execute:
  echo: true
---

## Shopping for a Flight to Seattle {{< fa plane >}}

![](images/alaska.png){fig-align="center" width="4.92in"}

# Optimal Stopping Problem

::: notes
-   Mathematically optimal solution for calculating the optimal stopping point
-   Question is when to stop searching
:::

## Explore-Exploit Tradeoff

-   Finding the ***optimal*** balance of:

    -   Gathering information through search – ***exploration*** {{< fa map-location-dot title="Map" >}}

    -   Leveraging known information – ***exploitation*** {{< fa bullseye title="Bullseye" >}}

## Humans Do Not Decide Optimally

![](images/thinkingfastandslow.jpeg){fig-align="center"}

## Cognitive Decision Science

::: notes
-   Cognitive process

-   Systematic deviations from rationality

-   according to economic theory of rationality
:::

-   Study of:
    -   how people ***should*** make decisions
    -   how they ***actually*** make decisions
    -   how this process can be ***modeled*** to both predict and explain behavior
    -   how they can make ***better*** decisions

## About Me

::: columns
::: {.column width="50%"}
![](images/erin.jpeg)
:::

::: {.column width="50%"}
-   PhD Candidate at Carnegie Mellon University in Cognitive Decision Science

-   ScB in Statistics and Behavioral Decision Sciences at Brown University

-   Interned at Apple, Amazon, Disney, Microsoft

-   On the job market for 2025
:::
:::

## Decoding Human Decision Making

::: notes
1.  Running human experiments {{< fa flask title="Flask" >}}
2.  Simulating behavior using Python {{< fa brands python title="Python" >}}
3.  Analyzing data in R {{< fa brands r-project title="R Project" >}}
:::

::: columns
::: {.column .fragment .center width="33%"}
::: v-center-container
{{< fa flask title="Flask" size=5x >}}
:::

::: v-center-container
<center>Running human experiments</center>
:::
:::

::: {.column .fragment .center width="33%"}
::: v-center-container
{{< fa brands python title="Python" size=5x >}}
:::

<center>Simulating behavior</center>
:::

::: {.column .fragment .center width="33%"}
::: v-center-container
{{< fa brands r-project title="R Project" size=5x >}}
:::

<center>Analyzing data</center>
:::
:::

# Running Human Experiments {{< fa flask title="Flask" >}}

## Design Experiment

-   Decision Making Task

    -   Optimal Stopping Task

-   Factors to manipulate

    -   Feedback Type

    -   Knowledge of Distribution of Option Values

## Develop Experiment

::: notes
-   Build task for human participants to complete

-   Integrate into Qualtrics survey

-   Tools:

    -   Javascript, HTML, CSS, Qualtrics
:::

::: columns
::: {.column .fragment .center width="45%"}
::: v-center-container
![](images/survey.png){height="400"}
:::

<center>Survey</center>
:::

::: {.column .fragment .center width="10%"}
::: {style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"}
{{< fa plus size=2x >}}
:::
:::

::: {.column .fragment .center width="45%"}
::: v-center-container
![](images/choice.png){height="400"}
:::

<center>Task</center>
:::
:::

## Optimal Stopping Task

GO THROUGH TASK

TODO

## Let's Play A Few Rounds

TODO

HUMAN choice

IBL choice

Optimal choice

Real problems

```{=html}
<!-- #Optimal Stopping Experiment

MAYBE REMOVE?

![](images/experiment2_outcome.mov){height="600" fig-align="center"}

-->
```
## Collect Data

![](images/mturk-screen.png){fig-align="center"}

# Simulating Behavior Using Python {{< fa brands python title="Python" >}}

## Build Decision Making Environment

::: notes
-   Create task that replicates real-world decision environment
-   Represent task through Python code
:::


::: columns
::: {.column .fragment .center width="45%"}
::: v-center-container
![](images/choice.png){fig-align="center" height="400"}
:::

<center>Task</center>
:::

::: {.column .fragment .center width="10%"}
::: {style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);"}
{{< fa arrow-right size=2x >}}
:::
:::

::: {.column .fragment .center width="45%"}
::: v-center-container
![](images/simulation-code.mov){fig-align="center" height="400"}
:::

<center>Code</center>
:::
:::


## Agents

::: columns
::: {.column width="50%"}
**Optimal Agent** {{< fa trophy >}}

-   Decide according to the optimal process

-   Serves as baseline

-   Calculate according to mathematical theory
:::

::: {.column width="50%"}
**Cognitive Agent** {{< fa brain >}}

-   Decide according to a cognitive algorithm

-   Serves as prediction of human behavior

-   Use [PyIBL](http://pyibl.ddmlab.com) Python library
:::
:::

## PyIBL

![](images/pyibl-page.png)

## Define Agent {auto-animate="true"}

``` {.python code-line-numbers="1-3"}
import pyibl 
a = pyibl.Agent(["action", "value", "dist_from_end"])
a.similarity(["value", "dist_from_end"], pyibl.positive_linear_similarity)
```

## Give Prior Experience {auto-animate="true"}

``` {.python code-line-numbers="5-6"}
import pyibl 
a = pyibl.Agent(["action", "value", "dist_from_end"])
a.similarity(["value", "dist_from_end"], pyibl.positive_linear_similarity)

a.populate([{"action": "Select", "value": 50, "dist_from_end": 9}],1)
a.populate([{"action": "Pass", "value": 50, "dist_from_end": 9}],1)
```

## Make Choice {auto-animate="true"}

``` {.python code-line-numbers="8-12"}
import pyibl 
a = pyibl.Agent(["action", "value", "dist_from_end"])
a.similarity(["value", "dist_from_end"], pyibl.positive_linear_similarity)

a.populate([{"action": "Select", "value": 50, "dist_from_end": 9}],1)
a.populate([{"action": "Pass", "value": 50, "dist_from_end": 9}],1)

value = 50
select_action =  {"action": "Select", "value": value, "dist_from_end": 9}
pass_action =  {"action": "Pass", "value": value, "dist_from_end": 9}
choice = a.choose([select_action, pass_action])
choice["action"]
```

## Receive Feedback {auto-animate="true"}

``` {.python code-line-numbers="14-15"}
import pyibl 
a = pyibl.Agent(["action", "value", "dist_from_end"])
a.similarity(["value", "dist_from_end"], pyibl.positive_linear_similarity)

a.populate([{"action": "Select", "value": 50, "dist_from_end": 9}],1)
a.populate([{"action": "Pass", "value": 50, "dist_from_end": 9}],1)

value = 50
select_action =  {"action": "Select", "value": value, "dist_from_end": 9}
pass_action =  {"action": "Pass", "value": value, "dist_from_end": 9}
choice = a.choose([select_action, pass_action])
choice["action"]

# Feedback depends on correctness
a.respond(feedback)
```

## Why Python?

-   PyIBL and many other modeling libraries (e.g. scikit-learn, keras)

-   General-purpose and flexible

# Analyzing Behavior Using {{< fa brands r-project title="R Project" >}}

## Analyze Data and Report

::: notes
Qualtrics –\> CSV

Javascript Experiment –\> CSV

Join and analyze with R in reproducible Quarto document

Compare to optimal and IBL agents

Figures using ggplot2
:::

::: columns
::: {.column .fragment  width="45%"}
::: v-center-container
![](images/survey.png){fig-align="center" height="250"}
![](images/choice.png){fig-align="center" height="250"}
:::
:::

::: {.column .fragment width="10%"}
::: {style="position: absolute; top: 30%; left: 35%; transform: translate(-50%, -50%);"}
{{< fa arrow-right size=2x >}}
:::
::: {style="position: absolute; top: 70%; left: 35%; transform: translate(-50%, -50%);"}
{{< fa arrow-right size=2x >}}
:::
:::

::: {.column .fragment width="10%"}
::: {style="position: absolute; top: 30%; left: 50%; transform: translate(-50%, -50%);"}
{{< fa file-csv size=2x >}}
:::
::: {style="position: absolute; top: 70%; left: 50%; transform: translate(-50%, -50%);"}
{{< fa file-csv size=2x >}}
:::
:::

::: {.column .fragment width="10%"}
::: {style="position: absolute; top: 50%; left: 65%; transform: translate(-50%, -50%);"}
{{< fa arrow-right size=2x >}}
:::
:::

::: {.column .fragment width="10%"}
::: {style="position: absolute; top: 50%; left: 85%; transform: translate(-50%, -50%);"}
{{< fa laptop-code size=4x >}}
:::
:::
:::


## Why R?

-   Easy to visualize and manipulate data quickly
-   ggplot2
-   Excels in statistical analysis

# Results

## People stop searching too early

## People learn from feedback

## Having knowledge of the distribution hinders necessary exploration

# Conclusion

## Tools

::: notes
-   Decoding the human mind is difficult and requires many tools
:::

::: columns
::: {.column .center width="33%"}
::: v-center-container
![](images/qualtrics.png){width="300"}
:::
::: v-center-container
![](images/javascript.svg){width="100"}![](images/html.svg){height="100"}![](images/css.svg){height="100"}
:::

:::

::: {.column width="33%"}
![](images/python.png){width="100"}

![](images/pyibl.png){width="200"}

![](images/vscode.jpg){width="100"}
:::
:::

::: {.column width="33%"}
![](images/R.png){width="100"}

![](images/quarto.png){width="300"}

![](images/RStudio.png){width="300"}
:::

## Exploration in Choosing a Tool

::: notes
-   Use what can help you accomplish the task
-   Best when used together
-   Don't be afraid to explore and learn a new tool
:::

TODO: R and Python together

When you have a {{< fa hammer >}}, everything looks like a nail.

## Exploration at posit::conf

-   If this is your first posit::conf...

    -   There are lots of new people, technologies, topics to learn

-   If you have attended many times before....

    -   You likely have made connections, know which sessions are of interest

## Keep Exploring

-   Be careful of over-exploiting your knowledge

-   Meet new people, learn new things, see a new place

# Resources

## Resources

Short link for GitHub with slides, resources
